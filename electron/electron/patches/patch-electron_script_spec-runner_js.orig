Index: electron/script/spec-runner.js
--- electron/script/spec-runner.js.orig
+++ electron/script/spec-runner.js
@@ -85,14 +85,19 @@ async function main () {
     console.log(`Running against Electron ${versionString.green}`);
   }
 
+  /*
+  XXX const { hashElement } = require('folder-hash');
+  XXX folder-hash looks broken on openbsd
   const [lastSpecHash, lastSpecInstallHash] = loadLastSpecHash();
   const [currentSpecHash, currentSpecInstallHash] = await getSpecHash();
   const somethingChanged = (currentSpecHash !== lastSpecHash) ||
       (lastSpecInstallHash !== currentSpecInstallHash);
+  */
+  const somethingChanged = true
 
   if (somethingChanged) {
     await installSpecModules(path.resolve(__dirname, '..', 'spec'));
-    await getSpecHash().then(saveSpecHash);
+    //await getSpecHash().then(saveSpecHash);
   }
 
   if (!fs.existsSync(path.resolve(__dirname, '../electron.d.ts'))) {
@@ -163,10 +168,14 @@ async function runTestUsingElectron (specDir, testName
     exe = path.resolve(BASE, utils.getElectronExec());
   }
   const runnerArgs = [`electron/${specDir}`, ...unknownArgs.slice(2)];
-  if (process.platform === 'linux') {
+  if (process.platform === 'linux' || process.platform === 'openbsd') {
+    /*// XXX use --no-sandbox ?
+    runnerArgs.unshift(path.resolve(__dirname, 'dbus_mock.py'),
+      exe, "--no-sandbox");*/
     runnerArgs.unshift(path.resolve(__dirname, 'dbus_mock.py'), exe);
     exe = 'python3';
   }
+  console.log(exe, runnerArgs)
   const { status, signal } = childProcess.spawnSync(exe, runnerArgs, {
     cwd: path.resolve(__dirname, '../..'),
     stdio: 'inherit'
