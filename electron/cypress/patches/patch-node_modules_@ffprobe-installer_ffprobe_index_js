Index: node_modules/@ffprobe-installer/ffprobe/index.js
--- node_modules/@ffprobe-installer/ffprobe/index.js.orig
+++ node_modules/@ffprobe-installer/ffprobe/index.js
@@ -1,47 +1,47 @@
 'use strict';
 
-const os = require('os');
-const path = require('path');
+// const os = require('os');
+// const path = require('path');
 
-const verifyFile = require('./lib/verify-file');
+// const verifyFile = require('./lib/verify-file');
 
-const platform = os.platform() + '-' + os.arch();
+// const platform = os.platform() + '-' + os.arch();
 
-const packageName = '@ffprobe-installer/' + platform;
+// const packageName = '@ffprobe-installer/' + platform;
 
-if (!require('./package.json').optionalDependencies[packageName]) {
-	throw new Error('Unsupported platform/architecture: ' + platform);
-}
+// if (!require('./package.json').optionalDependencies[packageName]) {
+// 	throw new Error('Unsupported platform/architecture: ' + platform);
+// }
 
-const binary = os.platform() === 'win32' ? 'ffprobe.exe' : 'ffprobe';
+// const binary = os.platform() === 'win32' ? 'ffprobe.exe' : 'ffprobe';
 
-const npm3Path = path.resolve(__dirname, '..', platform);
-const npm2Path = path.resolve(__dirname, 'node_modules', '@ffprobe-installer', platform);
+// const npm3Path = path.resolve(__dirname, '..', platform);
+// const npm2Path = path.resolve(__dirname, 'node_modules', '@ffprobe-installer', platform);
 
-const npm3Binary = path.join(npm3Path, binary);
-const npm2Binary = path.join(npm2Path, binary);
+// const npm3Binary = path.join(npm3Path, binary);
+// const npm2Binary = path.join(npm2Path, binary);
 
-const npm3Package = path.join(npm3Path, 'package.json');
-const npm2Package = path.join(npm2Path, 'package.json');
+// const npm3Package = path.join(npm3Path, 'package.json');
+// const npm2Package = path.join(npm2Path, 'package.json');
 
-let ffprobePath;
-let packageJson;
+// let ffprobePath;
+// let packageJson;
 
-if (verifyFile(npm3Binary)) {
-	ffprobePath = npm3Binary;
-	packageJson = require(npm3Package);
-} else if (verifyFile(npm2Binary)) {
-	ffprobePath = npm2Binary;
-	packageJson = require(npm2Package);
-} else {
-	throw new Error('Could not find ffprobe executable, tried "' + npm3Binary + '" and "' + npm2Binary + '"');
-}
+// if (verifyFile(npm3Binary)) {
+// 	ffprobePath = npm3Binary;
+// 	packageJson = require(npm3Package);
+// } else if (verifyFile(npm2Binary)) {
+// 	ffprobePath = npm2Binary;
+// 	packageJson = require(npm2Package);
+// } else {
+// 	throw new Error('Could not find ffprobe executable, tried "' + npm3Binary + '" and "' + npm2Binary + '"');
+// }
 
-const version = packageJson.ffprobe || packageJson.version;
-const url = packageJson.homepage;
+// const version = packageJson.ffprobe || packageJson.version;
+// const url = packageJson.homepage;
 
 module.exports = {
-	path: ffprobePath,
-	version,
-	url
+	path: 'ffprobe',
+	version: '4.4.4',
+	url: 'https://ffmpeg.org/',
 };
